{
  "name": "latex-graphics-helper",
  "displayName": "LaTeX Graphics Helper",
  "description": "A VS Code extension for LaTeX users to efficiently process graphic files. It provides features such as PDF cropping, image format conversion, converting Draw.io files to PDF, and generating LaTeX code using Gemini AI.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.100.0"
  },
  "license": "MIT",
  "publisher": "Naatin",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "explorer/context": [
        {
          "command": "latex-graphics-helper.cropPdf",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .pdf"
        },
        {
          "command": "latex-graphics-helper.convertDrawioToPdf",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .drawio || resourceExtname == .dio"
        },
        {
          "submenu": "latex-graphics-helper.convertPdfToImage",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .pdf"
        },
        {
          "command": "latex-graphics-helper.convertPngToPdf",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .png"
        },
        {
          "command": "latex-graphics-helper.convertJpegToPdf",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .jpeg || resourceExtname == .jpg"
        },
        {
          "command": "latex-graphics-helper.convertSvgToPdf",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .svg"
        }
      ],
      "latex-graphics-helper.convertPdfToImage": [
        {
          "command": "latex-graphics-helper.convertPdfToPng",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .pdf"
        },
        {
          "command": "latex-graphics-helper.convertPdfToJpeg",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .pdf"
        },
        {
          "command": "latex-graphics-helper.convertPdfToSvg",
          "group": "latex-graphics-helper",
          "when": "resourceExtname == .pdf"
        }
      ]
    },
    "submenus": [
      {
        "id": "latex-graphics-helper.convertPdfToImage",
        "label": "%convertPdfToImage%"
      }
    ],
    "commands": [
      {
        "command": "latex-graphics-helper.cropPdf",
        "title": "%cropPdf%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertDrawioToPdf",
        "title": "%convertDrawioToPdf%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertPdfToPng",
        "title": "%convertPdfToPng%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertPdfToJpeg",
        "title": "%convertPdfToJpeg%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertPdfToSvg",
        "title": "%convertPdfToSvg%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertPngToPdf",
        "title": "%convertPngToPdf%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertJpegToPdf",
        "title": "%convertJpegToPdf%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.convertSvgToPdf",
        "title": "%convertSvgToPdf%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.setGeminiApiKey",
        "title": "%setGeminiApiKey%",
        "category": "LaTeX Graphics Helper"
      },
      {
        "command": "latex-graphics-helper.deleteGeminiApiKey",
        "title": "%deleteGeminiApiKey%",
        "category": "LaTeX Graphics Helper"
      }
    ],
    "configuration": {
      "title": "LaTeX Graphics Helper",
      "properties": {
        "latex-graphics-helper.shell": {
          "type": "string",
          "default": "",
          "description": "Shell to use for executing commands. If not specified, the default shell for your operating system will be used (powershell.exe on Windows, /bin/zsh on macOS, /bin/bash on others)."
        },
        "latex-graphics-helper.execPath.pdfcrop": {
          "type": "string",
          "default": "pdfcrop",
          "description": "Path to the pdfcrop executable"
        },
        "latex-graphics-helper.execPath.drawio": {
          "type": "string",
          "default": "",
          "description": "Path to the drawio executable. If not specified, the default path for your operating system will be used (\"C:\\Program Files\\draw.io\\draw.io.exe\" on Windows, /Applications/draw.io.app/Contents/MacOS/draw.io on macOS, drawio on others)."
        },
        "latex-graphics-helper.execPath.pdftocairo": {
          "type": "string",
          "default": "pdftocairo",
          "description": "Path to the pdftocairo executable"
        },
        "latex-graphics-helper.execPath.inkscape": {
          "type": "string",
          "default": "",
          "description": "Path to the inkscape executable. If not specified, the default path for your operating system will be used (\"C:\\Program Files\\Inkscape\\bin\\inkscape.exe\" on Windows, inkscape on others)."
        },
        "latex-graphics-helper.outputPath.cropPdf": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}-crop.pdf",
          "description": "Output file name when cropping a pdf file."
        },
        "latex-graphics-helper.outputPath.convertDrawioToPdf": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}/${tab}",
          "description": "Output file name when converting a Draw.io file to PDF. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.convertPdfToPng": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}",
          "description": "Output file name when converting a PDF file to PNG. Depends on pdftocairo. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.convertPdfToJpeg": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}",
          "description": "Output file name when converting a PDF file to JPEG. Depends on pdftocairo. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.convertPdfToSvg": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}.svg",
          "description": "Output file name when converting a PDF file to SVG. Depends on pdftocairo."
        },
        "latex-graphics-helper.outputPath.convertPngToPdf": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}",
          "description": "Output file name when converting a PNG file to PDF. Depends on inkscape. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.convertJpegToPdf": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}",
          "description": "Output file name when converting a JPEG file to PDF. Depends on inkscape. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.convertSvgToPdf": {
          "type": "string",
          "default": "${fileDirname}/${fileBasenameNoExtension}",
          "description": "Output file name when converting a SVG file to PDF. Depends on inkscape. The file extension is added automatically."
        },
        "latex-graphics-helper.outputPath.clipboardImage": {
          "type": "string",
          "default": "${fileDirname}/${dateNow}",
          "description": "Output file name when saving clipboard images to a file. The file extension is added automatically."
        },
        "latex-graphics-helper.choice.figurePlacement": {
          "type": "array",
          "default": [
            "[H]",
            "[h]",
            "[t]",
            "[b]",
            "[p]",
            "[ht]",
            "[hb]",
            "[hp]",
            "[tb]",
            "[tp]",
            "[bp]",
            "[htb]",
            "[htp]",
            "[hbp]",
            "[tbp]",
            "[htbp]"
          ],
          "description": "Available placement specifiers for LaTeX figures and tables."
        },
        "latex-graphics-helper.choice.figureAlignment": {
          "type": "array",
          "default": [
            "\\centering",
            "\\raggedright",
            "\\raggedleft"
          ],
          "description": "Available alignment options for LaTeX figures and tables."
        },
        "latex-graphics-helper.choice.graphicsOptions": {
          "type": "array",
          "default": [
            "[width=1.0\\linewidth]",
            "[width=0.9\\linewidth]",
            "[width=0.8\\linewidth]",
            "[width=0.7\\linewidth]",
            "[width=0.6\\linewidth]",
            "[width=0.5\\linewidth]"
          ],
          "description": "Default graphics options for LaTeX figures and tables."
        },
        "latex-graphics-helper.choice.subVerticalAlignment": {
          "type": "array",
          "default": [
            "[t]",
            "[c]",
            "[b]"
          ],
          "description": "Available vertical alignment options for LaTeX minipage environments."
        },
        "latex-graphics-helper.choice.subWidth": {
          "type": "array",
          "default": [
            "{0.45\\linewidth}",
            "{0.35\\linewidth}",
            "{0.25\\linewidth}",
            "{0.15\\linewidth}"
          ],
          "description": "Available width options for LaTeX minipage environments."
        },
        "latex-graphics-helper.choice.spaceBetweenSubs": {
          "type": "array",
          "default": [
            "\\hspace{0.01\\linewidth}",
            "\\hspace{0.02\\linewidth}",
            "\\hspace{0.03\\linewidth}",
            "\\hspace{0.04\\linewidth}",
            "\\hspace{0.05\\linewidth}"
          ],
          "description": "Available spacing options between subfigures/subtables in LaTeX minipage environments."
        },
        "latex-graphics-helper.pdftocairo.pngOptions": {
          "type": "array",
          "default": [
            "-png",
            "-transp",
            "-singlefile"
          ],
          "description": "Options passed to pdftocairo when converting PDF to PNG."
        },
        "latex-graphics-helper.pdftocairo.jpegOptions": {
          "type": "array",
          "default": [
            "-jpeg",
            "-singlefile"
          ],
          "description": "Options passed to pdftocairo when converting PDF to JPEG."
        },
        "latex-graphics-helper.pdftocairo.svgOptions": {
          "type": "array",
          "default": [
            "-svg"
          ],
          "description": "Options passed to pdftocairo when converting PDF to SVG."
        },
        "latex-graphics-helper.gemini.model": {
          "type": "string",
          "default": "gemini-2.0-flash",
          "description": "Selects the Gemini AI model to be used for generating LaTeX code from images."
        },
        "latex-graphics-helper.gemini.requests": {
          "type": "array",
          "default": [
            "Convert the uploaded file into a LaTeX equation and output it, enclosed in an align environment. Please avoid Markdown format and do not enclose the output in ```latex```. The output is intended for LaTeX.",
            "Convert the uploaded file into a LaTeX table and output it, enclosed in a table environment. Please avoid Markdown format and do not enclose the output in ```latex```. The output is intended for LaTeX."
          ],
          "description": "List of predefined requests for the Gemini AI model to generate LaTeX code from images."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.100.0",
    "@types/xml2js": "^0.4.14",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@google/genai": "^1.12.0",
    "pdf-lib": "^1.17.1",
    "xml2js": "^0.6.2"
  }
}
